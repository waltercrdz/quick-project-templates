service: python-lambda-template

frameworkVersion: '4'

plugins:
  - serverless-deployment-bucket
  - serverless-python-requirements

provider:
  name: aws
  runtime: python3.12
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  timeout: 30
  environment:
    ENV: ${opt:stage, 'development'}
    REGION: ${aws:region}
    ACCOUNT_ID: ${aws:accountId}

  deploymentBucket:
      name: ${self:provider.stage}-python-lambda-template-deployment-bucket
      blockPublicAccess: true

  iamRoleStatements:
    - Action:
      - sqs:*
      Resource:
        - arn:aws:sqs:${aws:region}:${aws:accountId}:${self:provider.stage}-product-created-queue
      Effect: Allow

custom:
  pythonRequirements:
    usePoetry: true
    slim: true
    strip: false

package:
  exclude:
    - node_modules/**
    - venv/**
    - .venv/**
    - tests/**
    - docs/**
    - .git/**
    - .github/**
    - .vscode/**
    - .pytest_cache/**
    - .mypy_cache/**
    - .ruff_cache/**

functions:
  sqs-consumer:
    handler: src/handler/sqs_consumer_handler.lambda_handler
    events:
      - sqs: arn:aws:sqs:${aws:region}:${aws:accountId}:${self:provider.stage}-product-created-queue
    vpc:
      securityGroupIds:
        - ${env:SEC_GROUP_ID}
      subnetIds:
        - ${env:SUBNET_ID1}
        - ${env:SUBNET_ID2}
    environment:
      DB_HOST: ${env:DB_HOST}
      DB_NAME: ${env:DB_NAME}
      DB_USER: ${env:DB_USER}
      DB_PASSWORD: ${env:DB_PASSWORD}
      SQS_REGION: ${env:SQS_REGION}